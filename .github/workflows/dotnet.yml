name: QA Platform build and test workflow

on:
  push:
    branches:
      - spike-deployment
  pull_request:
    branches: [ "main", "development" ]

jobs:
  run-tests:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Start Database with Docker Compose
      run: docker compose -f docker-compose-test.yml up -d qa-platform-db

    - name: Start API Container
      run: docker compose -f docker-compose-test.yml up -d qa-platform-api

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --no-restore

    - name: Run Application Project Unit Tests
      run: dotnet test Application.Tests --no-build --verbosity normal

    - name: Run Integrations Tests
      run: dotnet test QAPlatformAPI.IntegrationTests --no-build --verbosity normal

    - name: Run Acceptance Tests
      run: dotnet test QAPlatformAPI.AcceptanceTests --no-build --verbosity normal

    - name: Stop and clean up containers
      run: docker compose -f docker-compose-test.yml down

  build-and-push:
    needs: [run-tests]  # Run only after tests pass
    runs-on: ubuntu-latest
    permissions:
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Determine Image Tag
        run: echo "IMAGE_TAG=pr-${{ github.event.pull_request.number || github.sha }}" >> $GITHUB_ENV

      - name: Build Docker image
        run: |
          docker build -t ghcr.io/${{ github.repository_owner }}/qa-platform-api:${{ env.IMAGE_TAG }} .

      - name: Push Docker image to GitHub Container Registry
        run: |
          docker push ghcr.io/${{ github.repository_owner }}/qa-platform-api:${{ env.IMAGE_TAG }}
